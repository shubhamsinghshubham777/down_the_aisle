plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def getKeyProperty(String propertyName, String defaultValue = null) {
    def envValue = System.getenv(propertyName)
    if (envValue != null && !envValue.isEmpty()) {
        return envValue
    }

    def keyPropertiesFile = rootProject.file("key.properties")
    if (keyPropertiesFile.exists()) {
        Properties keyProperties = new Properties()
        keyProperties.load(new FileInputStream(keyPropertiesFile))
        def propValue = keyProperties[propertyName]
        if (propValue != null && !propValue.isEmpty()) {
            return propValue
        }
    }

    return defaultValue
}

android {
    namespace = "app.downtheaisle"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "app.downtheaisle"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            keyAlias = getKeyProperty("KEY_ALIAS")
            keyPassword = getKeyProperty("KEY_PASSWORD")
            storeFile = file(getKeyProperty("STORE_FILE", "keystore.jks"))
            storePassword = getKeyProperty("STORE_PASSWORD")
        }
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.release
        }
    }
}

flutter {
    source = "../.."
}
